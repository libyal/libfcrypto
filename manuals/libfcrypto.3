.Dd January 115, 2024
.Dt libfcrypto 3
.Os libfcrypto
.Sh NAME
.Nm libfcrypto.h
.Nd Library to support encryption formats
.Sh SYNOPSIS
.In libfcrypto.h
.Pp
Support functions
.Ft const char *
.Fn libfcrypto_get_version "void"
.Pp
Error functions
.Ft void
.Fn libfcrypto_error_free "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_error_fprint "libfcrypto_error_t *error" "FILE *stream"
.Ft int
.Fn libfcrypto_error_sprint "libfcrypto_error_t *error" "char *string" "size_t size"
.Ft int
.Fn libfcrypto_error_backtrace_fprint "libfcrypto_error_t *error" "FILE *stream"
.Ft int
.Fn libfcrypto_error_backtrace_sprint "libfcrypto_error_t *error" "char *string" "size_t size"
.Pp
Blowfish context functions
.Ft int
.Fn libfcrypto_blowfish_context_initialize "libfcrypto_blowfish_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_blowfish_context_free "libfcrypto_blowfish_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_blowfish_context_set_key "libfcrypto_blowfish_context_t *context" "const uint8_t *key" "size_t key_bit_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_blowfish_crypt_cbc "libfcrypto_blowfish_context_t *context" "int mode" "const uint8_t *initialization_vector" "size_t initialization_vector_size" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_blowfish_crypt_ecb "libfcrypto_blowfish_context_t *context" "int mode" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Sh DESCRIPTION
.Pp
DES3 context functions
.Ft int
.Fn libfcrypto_des3_context_initialize "libfcrypto_des3_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_des3_context_free "libfcrypto_des3_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_des3_context_set_key "libfcrypto_des3_context_t *context" "const uint8_t *key" "size_t key_bit_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_des3_crypt_cbc "libfcrypto_des3_context_t *context" "int mode" "const uint8_t *initialization_vector" "size_t initialization_vector_size" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_des3_crypt_ecb "libfcrypto_des3_context_t *context" "int mode" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Pp
RC4 context functions
.Ft int
.Fn libfcrypto_rc4_context_initialize "libfcrypto_rc4_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_rc4_context_free "libfcrypto_rc4_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_rc4_context_set_key "libfcrypto_rc4_context_t *context" "const uint8_t *key" "size_t key_bit_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_rc4_crypt "libfcrypto_rc4_context_t *context" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Pp
Serpent context functions
.Ft int
.Fn libfcrypto_serpent_context_initialize "libfcrypto_serpent_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_serpent_context_free "libfcrypto_serpent_context_t **context" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_serpent_context_set_key "libfcrypto_serpent_context_t *context" "const uint8_t *key" "size_t key_bit_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_serpent_crypt_cbc "libfcrypto_serpent_context_t *context" "int mode" "const uint8_t *initialization_vector" "size_t initialization_vector_size" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Ft int
.Fn libfcrypto_serpent_crypt_ecb "libfcrypto_serpent_context_t *context" "int mode" "const uint8_t *input_data" "size_t input_data_size" "uint8_t *output_data" "size_t output_data_size" "libfcrypto_error_t **error"
.Sh DESCRIPTION
The
.Fn libfcrypto_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or \-1 on error, dependent on the return type.
For the actual return values see "libfcrypto.h".
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind on the project issue tracker: https://github.com/libyal/libfcrypto/issues
.Sh AUTHOR
These man pages are generated from "libfcrypto.h".
.Sh COPYRIGHT
Copyright (C) 2017-2024, Joachim Metz <joachim.metz@gmail.com>.
.sp
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libfcrypto.h include file
